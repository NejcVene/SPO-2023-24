// program, ki vse datoteka v direktoriju
// ki so bile spremenjene v zadnjih 100 sekundah doda k imenu
// "_novo", torej "imeDatoteke_novo"

#include <dirent.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <time.h>
#include <sys/stat.h>

#define err(msg, ime) { fprintf(stderr, "Error: %s %s\n", msg, ime); exit(1); }

int main(int argc, char **argv) {

    DIR *dp;
    struct dirent *dirP;
    struct stat statBuf; // tolo strukturo rabimo za stat funkcijo
    time_t trenutniCas, casPrej;
    char novoIme[200];
    int steviloSekund = atoi(argv[2]);

    if (argc != 3) {
        err("Command line", "to few arguments <dirname> number of seconds")
    }
    dp = opendir(argv[1]);
    if (!dp) { // preveri, če je NULL
        err("Ne morem odpreti direktorija", argv[1])
    }

    trenutniCas = time(NULL);
    casPrej = trenutniCas - steviloSekund;

    while ((dirP = readdir(dp)) != NULL) {
        if (stat(dirP->d_name, &statBuf) < 0) {
            err("Stat for", "file")
        }
        // če ni navadno datoteka, jo preskoči
        if (!S_ISREG(statBuf.st_mode)) {
            continue;
        }
        strcpy(novoIme, dirP->d_name);
        if (statBuf.st_mtime > casPrej) {
            strcat(novoIme, "_novo");
            rename(dirP->d_name, novoIme);
        }
        printf("FILE: %s %s %ld\n", dirP->d_name, novoIme, statBuf.st_mtime);
    }

    if (closedir(dp) < 0) {
        err("closedir na", argv[1]);
    }

    return 0;

}